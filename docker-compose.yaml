version: '2.1'

services:
    plex:
        container_name: plex
        image: plexinc/pms-docker:${PMSTAG}
        restart: unless-stopped
        network_mode: 'host'
        ports:
          - '${IP_ADDRESS}:32400:32400/tcp'
          - '${IP_ADDRESS}:3005:3005/tcp'
          - '${IP_ADDRESS}:8324:8324/tcp'
          - '${IP_ADDRESS}:32469:32469/tcp'
          - '${IP_ADDRESS}:1900:1900/udp'
          - '${IP_ADDRESS}:32410:32410/udp'
          - '${IP_ADDRESS}:32412:32412/udp'
          - '${IP_ADDRESS}:32413:32413/udp'
          - '${IP_ADDRESS}:32414:32414/udp'
        environment:
          - PLEX_CLAIM=${PMSTOKEN}
          - ADVERTISE_IP=http://${IP_ADDRESS}:32400/
          - ALLOWED_NETWORKS=${CIDR_ADDRESS}
          - PLEX_UID=${PUID}
          - PLEX_GID=${PGID}
        hostname: ${HOSTNAME}
        volumes:
          - '/etc/localtime:/etc/localtime:ro'
          - './plex:/config'
          - './plex/transcode:/transcode'
          - '/media/Media/Movies:/data/movies'
          - '/media/Media/Series:/data/tvshows'
          - '/media/Media1/Movies:/data/movies1'
          - '/media/Media1/Series:/data/tvshows1'
          - '/media/Media2/Movies:/data/movies2'
          - '/media/Media2/Series:/data/tvshows2'
          - '/media/Media3/Movies:/data/movies3'
          - '/media/Media3/Series:/data/tvshows3'
        labels:
          - "traefik.enable=false"

# Downloaders
    radarr:
        image: linuxserver/radarr
        container_name: radarr
        restart: unless-stopped
        networks:
          - web
          - default
        expose:
          - "7878"
        labels:
          - "traefik.backend=radarr"
          - "traefik.docker.network=web"
          - "traefik.frontend.rule=Host:radarr.${DOMAIN_NAME}"
          - "traefik.enable=true"
          - "traefik.port=7878"
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './radarr:/config'
            - '/media/Media3/download/completed:/data/completed:rw'
            - '/media/Media3/Movies:/data/movies:rw'
            - '/etc/localtime:/etc/localtime:ro'
    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        restart: unless-stopped
        networks:
          - web
          - default
        expose:
          - "8989"
        labels:
          - "traefik.backend=sonarr"
          - "traefik.docker.network=web"
          - "traefik.frontend.rule=Host:sonarr.${DOMAIN_NAME}"
          - "traefik.enable=true"
          - "traefik.port=8989"
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './sonarr:/config'
            - '/media/Media3/download/completed:/data/completed:rw'
            - '/media/Media3/Series:/data/tvshows:rw'
            - '/etc/localtime:/etc/localtime:ro'

    arch-delugevpn:
        image: binhex/arch-delugevpn
        container_name: delugevpn
        restart: unless-stopped
        network_mode: 'bridge'
        ports:
            - '${IP_ADDRESS}:8112:8112'
            - '${IP_ADDRESS}:8118:8118'
            - '${IP_ADDRESS}:58846:58846'
            - '${IP_ADDRESS}:58946:58946'
        cap_add:
            - NET_ADMIN
        environment:
            - VPN_ENABLED=yes
            - VPN_USER=${VPN_USERNAME}
            - VPN_PASS=${VPN_PASSWORD}
            - VPN_PORT=1198
            - VPN_PROTOCOL=udp
            - VPN_DEVICE_TYPE=tun
            - VPN_PROV=custom
            - STRONG_CERTS=no
            - ENABLE_PRIVOXY=yes
            - STRICT_PORT_FORWARD=yes
            - LAN_NETWORK=${NETWORK}
            - NAME_SERVERS=8.8.8.8,8.8.4.4
            - DEBUG=false
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '/media/Media3/download:/data:rw'
            - './delugevpn/config:/config'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
          - "traefik.enable=false"

#     transmission:
#       container_name: transmission
#       image: linuxserver/transmission:latest
#       networks:
#         - web
#         - default
#       environment:
#         - PUID=${PUID}
#         - PGID=${PGID}
#       volumes:
#         - '/media/Media3/download:/downloads:rw'
#         - './transmission/config:/config'
#         - '/etc/localtime:/etc/localtime:ro'
#       labels:
#         - "traefik.enable=true"
#         - "traefik.backend=transmission"
#         - "traefik.frontend.rule=Host:transmission.${DOMAIN_NAME}"
#         - "traefik.port=9091"
#         - "traefik.docker.network=web"

    transmission:
        container_name: transmission
        image: linuxserver/transmission:latest
        network_mode: 'host'
        volumes:
          - '/media/Media3/download:/downloads:rw'
          - './transmission/config:/config'
          - '/etc/localtime:/etc/localtime:ro'
        environment:
          - PUID=${PUID}
          - PGID=${PGID}
        ports:
          - "9091:9091"
          - "51413:51413"
        labels:
          - "traefik.enable=false"

    jackett:
        #image: linuxserver/jackett
        build: https://github.com/linuxserver/docker-jackett.git
        container_name: jackett
        restart: unless-stopped
        network_mode: 'host'
        ports:
            - '${IP_ADDRESS}:9117:9117'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './jackett:/config'
            - '/media/Media3/download/completed:/downloads'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
          - "traefik.enable=false"
# Data
    tautulli:
        image: linuxserver/tautulli
        container_name: tautulli
        restart: unless-stopped
        networks:
          - web
          - default
        expose:
          - "7878"
        labels:
          - "traefik.backend=tautulli"
          - "traefik.docker.network=web"
          - "traefik.frontend.rule=Host:tautulli.${DOMAIN_NAME}"
          - "traefik.enable=true"
          - "traefik.port=8181"
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './tautulli:/config'
            - './plex/Library/Application Support/Plex Media Server/Logs:/logs:ro'
            - '/etc/localtime:/etc/localtime:ro'
        depends_on:
            - plex

    ombi:
        image: linuxserver/ombi
        container_name: ombi
        restart: unless-stopped
        networks:
          - web
          - default
        expose:
          - "3579"
        labels:
          - "traefik.backend=ombi"
          - "traefik.docker.network=web"
          - "traefik.frontend.rule=Host:ombi.${DOMAIN_NAME}"
          - "traefik.enable=true"
          - "traefik.port=3579"
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './ombi:/config'
            - '/etc/localtime:/etc/localtime:ro'

    netdata:
        image: titpetric/netdata
        container_name: netdata
        restart: unless-stopped
        networks:
          - web
          - default
        expose:
          - "19999"
        labels:
          - "traefik.backend=netdata"
          - "traefik.docker.network=web"
          - "traefik.frontend.rule=Host:netdata.${DOMAIN_NAME}"
          - "traefik.enable=true"
          - "traefik.port=19999"
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        cap_add:
            - SYS_PTRACE
        volumes:
            - '/proc:/host/proc:ro'
            - '/sys:/host/sys:ro'
            - '/etc/localtime:/etc/localtime:ro'
            - '/var/run/docker.sock:/var/run/docker.sock'

    influxdb:
       container_name: influxdb
       image: influxdb
       ports:
         - 8086:8086
       volumes:
         - './influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro'
         - './influxdb:/var/lib/influxdb'
       restart: on-failure
       healthcheck:
         test: ["CMD", "curl", "-sI", "http://127.0.0.1:8086/ping"]
         interval: 30s
         timeout: 1s
         retries: 24
       labels:
         - "traefik.enable=false"

    grafana:
      container_name: grafana
      image: grafana/grafana
      restart: unless-stopped
      networks:
        - web
        - default
      environment:
        - GF_INSTALL_PLUGINS=petrslavotinek-carpetplot-panel
      expose:
        - "3000"
      labels:
        - "traefik.backend=grafana"
        - "traefik.docker.network=web"
        - "traefik.frontend.rule=Host:grafana.${DOMAIN_NAME}"
        - "traefik.enable=true"
        - "traefik.port=3000"
      volumes:
        - './grafana:/etc/grafana:rw'
        - './grafana:/var/lib/grafana:rw'
      depends_on:
        influxdb:
          condition: service_healthy

# Management
    portainer:
        container_name: portainer
        image: portainer/portainer
        networks:
          - web
          - default
        expose:
          - "9000"
        labels:
          - "traefik.backend=portainer"
          - "traefik.docker.network=web"
          - "traefik.frontend.rule=Host:portainer.${DOMAIN_NAME}"
          - "traefik.enable=true"
          - "traefik.port=9000"
        volumes:
          - './portainer:/data:rw'
          - '/var/run/docker.sock:/var/run/docker.sock'
        restart: on-failure

    #muximux:
    #    image: linuxserver/muximux
    #    container_name: muximux
    #    restart: unless-stopped
    #    network_mode: 'host'
    #    ports:
    #        - '${IP_ADDRESS}:8080:80'
    #    environment:
    #        - PUID=${PUID}
    #        - PGID=${PGID}
    #    volumes:
    #        - './muximux:/config'
    #        - '/etc/localtime:/etc/localtime:ro'

# Home automation
    homeassistant:
        container_name: home-assistant
        image: homeassistant/home-assistant
		networks:
          - web
          - default
        volumes:
          - './homeassistant:/config'
          - '/etc/localtime:/etc/localtime:ro'
        restart: on-failure
        expose:
          - "8123"
        labels:
		  - "traefik.backend=home-assistant"
          - "traefik.docker.network=web"
          - "traefik.frontend.rule=Host:ha.${DOMAIN_NAME}"
          - "traefik.enable=true"
          - "traefik.port=8123"
          - "traefik.enable=false"
        depends_on:
          influxdb:
            condition: service_healthy
        healthcheck:
          test: ["CMD", "curl", "-f", "http://127.0.0.1:8123"]
          interval: 30s
          timeout: 10s
          retries: 6

    node-red:
        container_name: node-red
        image: nodered/node-red-docker
        restart: unless-stopped
        networks:
          - web
          - default
        expose:
          - "1880"
        labels:
          - "traefik.backend=node-red"
          - "traefik.docker.network=web"
          - "traefik.frontend.rule=Host:nodered.${DOMAIN_NAME}"
          - "traefik.enable=true"
          - "traefik.port=1880"
        volumes:
          - './node-red:/data'
          - '/etc/localtime:/etc/localtime:ro'
        depends_on:
          #mosquitto:
          #  condition: service_started
          homeassistant:
            condition: service_healthy
        healthcheck:
          test: ["CMD", "curl", "-f", "http://127.0.0.1:1880"]
          interval: 30s
          timeout: 10s
          retries: 5

    mosquitto:
        image: library/eclipse-mosquitto:latest
        container_name: mosquitto
        restart: unless-stopped
        network_mode: 'host'
        ports:
          - '${IP_ADDRESS}:1883:1883'
          - '${IP_ADDRESS}:8883:8883'
        labels:
          - "traefik.enable=false"
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './mosquitto/config:/mosquitto/config:rw'
            - './mosquitto/data:/mosquitto/data'
            - './mosquitto/log:/mosquitto/log'
            - '/etc/localtime:/etc/localtime:ro'

networks:
  web:
    external: true
